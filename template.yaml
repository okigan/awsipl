AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An awsipl Serverless Specification template.

Globals:
    Function:
        Timeout: 15

Resources:

  process:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: process/index.handler
      Runtime: nodejs4.3
      Description: ''
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        LambdaMicroservice:
          Type: Api
          Properties:
            Path: /process
            Method: ANY
  processPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt process.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'
        
  ingest:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: ingest/index.handler
      Runtime: nodejs4.3
      Description: ''
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: !GetAtt convert.Arn
      Events:
        LambdaMicroservice:
          Type: Api
          Properties:
            Path: /ingest
            Method: ANY
  ingestPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt process.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'

  download:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: download/index.handler
      Runtime: nodejs6.10
      Description: ''
      MemorySize: 128

  echo:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: echo/index.handler
      Runtime: nodejs6.10
      Description: ''
      MemorySize: 128
      Policies:
      Events:
        LambdaMicroservice:
          Type: Api
          Properties:
            Path: /echo
            Method: ANY

  convert:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: convert/index.handler
      Runtime: nodejs6.10
      Description: ''
      MemorySize: 128
      Policies:
        - S3CrudPolicy:
            BucketName: 'awsipl'
      Events:
        LambdaMicroservice:
          Type: Api
          Properties:
            Path: /convert
            Method: POST
        SNS1:
          Type: SNS
          Properties:
            Topic:
              Ref: convertTopic
        SQS1:
          Type: SQS
          Properties:
            Queue: !GetAtt convertQueue.Arn
            BatchSize: 1

  convertTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: 'awsipl_convert'
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt convert.Arn

  convertQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: 'awsiplconvert'

  convertPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt convert.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'

  awsiplSourceTable:                   
     Type: AWS::Serverless::SimpleTable
     Properties:
       TableName: awsipl_source
       PrimaryKey:
         Name: source_file_id
         Type: String
       ProvisionedThroughput:
         ReadCapacityUnits: 5
         WriteCapacityUnits: 5
         
  awsiplDerivativeTable:                   
     Type: AWS::Serverless::SimpleTable
     Properties:
       TableName: awsipl_derivative
       PrimaryKey:
         Name: derivative_file_id
         Type: String
       ProvisionedThroughput:
         ReadCapacityUnits: 5
         WriteCapacityUnits: 5


Outputs:

    HelloWorldApi:
      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

    convertFunction:
      Description: "Hello World Lambda Function ARN"
      Value: !GetAtt convert.Arn